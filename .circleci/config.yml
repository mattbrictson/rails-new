version: 2.1

executors:
  ruby:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          RAILS_ENV: test

commands:
  bundle_install:
    description: Install Ruby dependencies with Bundler
    steps:
      - restore_cache:
          keys:
            - bundle-v1-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - bundle-v1-{{ arch }}-
      - run:
          name: Install Ruby Dependencies
          command: |
            gem install bundler -v 2.1.4 --conservative --no-document
            bundle config --local deployment true
            bundle config --local path vendor/bundle
            bundle install --jobs=4 --retry=3
            bundle clean
      - save_cache:
          paths:
            - ./vendor/bundle
          key: bundle-v1-{{ arch }}-{{ checksum "Gemfile.lock" }}
  install_node:
    description: Install latest versions of Node and Yarn
    steps:
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash
            sudo apt-get install -y nodejs
            sudo ln -sf /usr/bin/node /usr/local/bin/node
      - run:
          name: Install Yarn
          command: |
            sudo npm i -g yarn
            sudo ln -sf /usr/bin/yarn /usr/local/bin/yarn
  set_up_database:
    steps:
      - run:
          name: Set Up Database
          command: bundle exec rake db:setup
  yarn_install:
    description: Install JS dependencies with Yarn
    steps:
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ arch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-{{ arch }}
      - run:
          name: Install JS Dependencies
          command: yarn install --frozen-lockfile --cache-folder .yarn-cache
      - save_cache:
          paths:
            - .yarn-cache
          key: yarn-cache-v1-{{ arch }}-{{ checksum "yarn.lock" }}

jobs:
  test:
    executor: ruby
    steps:
      - install_node
      - checkout
      - bundle_install
      - yarn_install
      - set_up_database
      - run:
          name: Run Tests
          command: bundle exec rake test
  test_system:
    executor: ruby
    steps:
      - install_node
      - checkout
      - bundle_install
      - yarn_install
      - set_up_database
      - run:
          name: Run System Tests
          command: |
            bundle exec rake webdrivers:chromedriver:update
            bundle exec rake test:system
      - store_artifacts:
          path: ./tmp/screenshots
          destination: screenshots

workflows:
  version: 2
  commit-workflow:
    jobs:
      - test
      - test_system
  cron-workflow:
    jobs:
      - test
      - test_system
    triggers:
      - schedule:
          cron: "0 13 * * 6"
          filters:
            branches:
              only:
                - main
